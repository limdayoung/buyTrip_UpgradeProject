<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd">
		

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	
	<!-- annotation 범위 설정 -->
	<context:component-scan base-package="buytrip.mvc" />
	
	
	<!-- Tiles 등록하기  -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
  	<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
  	<beans:property name="order" value="1"/>
	</beans:bean>
 
 	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
   id="tilesViewResolver"/>
      
 	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
  id="tilesConfigurer">
    <beans:property name="definitions">
      <beans:list>
        <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
      </beans:list>
    </beans:property>
  </beans:bean>  
     
     
  <!-- Exception 등록하기  -->
  <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <beans:property name="exceptionMappings">
      <beans:props>
        <beans:prop key="buytrip.mvc.model.exception.SessionCheckException">user/login</beans:prop>
        <beans:prop key="java.lang.Exception">error/errorMessage</beans:prop>
      </beans:props>
    </beans:property>
  </beans:bean>
     
     
  <!-- 뒤로가기 새로고침 기능 설정 -->
  <interceptors>
    <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
    	<beans:property name="cacheSeconds" value="0"/>
    	<beans:property name="useExpiresHeader" value="true"/>
    	<beans:property name="useCacheControlHeader" value="true"/>
    	<beans:property name="useCacheControlNoStore" value="true"/>
    </beans:bean> 
	</interceptors>
	
	
	<!-- aop annotation설정하기 -->
	<aop:aspectj-autoproxy/>
	
	<beans:bean id="buytrip.mvc.mail" 
    class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <beans:property name="host" value="smtp.gmail.com"/>
    <beans:property name="port" value="465"/>        
    <beans:property name="username" value="bytrip.kosta"/>
    <beans:property name="password" value="kosta184"/>
    <beans:property name="protocol" value="smtp"/>        
    <beans:property name="defaultEncoding" value="utf-8"/>
    <beans:property name="javaMailProperties">
        <beans:props>
            <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
            <beans:prop key="mail.smtp.ssl.enable">true</beans:prop>
            <beans:prop key="mail.smtp.auth">true</beans:prop>
            <beans:prop key="mail.smtp.ssl.checkserveridentity">true</beans:prop>
            <beans:prop key="mail.smtp.ssl.trust">*</beans:prop>
        </beans:props>
    </beans:property>        
</beans:bean>

<!-- websocket도와주는 handler -->
	<beans:bean id="echoHandler" class="buytrip.mvc.websocket.EchoHandler"/>
	
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo-ws"/>
		<websocket:sockjs/>
	</websocket:handlers>
	
		<!-- scheduler 설정하기. -->
	<task:executor id="executor" pool-size="5-10" queue-capacity="255"/>
	<task:scheduler id="scheduler" pool-size="3"/>
	<task:annotation-driven executor="executor"  scheduler="scheduler"/>
	
	
</beans:beans>







